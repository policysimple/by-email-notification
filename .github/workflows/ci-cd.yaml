name: ðŸ”„ Versioning & Deployment!!!!!
on:
  pull_request:
    branches:
      - dev
    types: [closed]


jobs:

  versioning_job:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    outputs:
      versioning_success: ${{ steps.versioning_step.outputs.success }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - id: extract_commit_message
        run: |
          echo "commit_message=$(git log -1 --pretty=format:%s)" >> $GITHUB_ENV
          echo "::set-output name=commit_message::$commit_message"

      - name: Checkout devops repo
        uses: actions/checkout@v3
        with:
          repository: ${{ vars.DEVOPS_PATH }}
          token: ${{ secrets.DEVOPS_TOKEN }}
          path: devops_repo


      - uses: ./devops_repo/.github/actions/semver-management
        with:
          GH_TOKEN: ${{ secrets.DEVOPS_TOKEN }}
          EXTERNAL_REPO: ${{ vars.GITOPS_PATH }}
          EXTERNAL_REPO_FILE_PATH: "envs/${{ github.event.repository.name }}/ccp-${{ github.event.pull_request.base.ref }}/version_info.json"
          SOURCE_BRANCH: ${{ github.head_ref }}
          TARGET_BRANCH: ${{ github.base_ref }}
          COMMIT_MESSAGE: ${{ steps.extract_commit_message.outputs.commit_message }}

  deploy_job:
    needs: versioning_job
    if: needs.versioning_job.result == 'success'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Checkout devops repo
        uses: actions/checkout@v3
        with:
          repository: ${{ vars.DEVOPS_PATH }}
          token: ${{ secrets.DEVOPS_TOKEN }}
          path: devops_repo

      - name: clone submodule
        uses: actions/checkout@v3
        with:
          repository: cuemby/by-email-notification-sdk.git
          ref: "master"
          token: ${{ secrets.GH_TOKEN }}
          path: by-email-notification-sdk

      - uses: ./devops_repo/.github/actions/version-upgrade-action
        with:
          gh_token: ${{ secrets.DEVOPS_TOKEN }}
          dockerhub_token: ${{ secrets.DOCKERHUB_TOKEN }}
          dockerfile_path: "./rpc/Dockerfile"
          dockerhub_username: ${{ vars.USER_REGISTRY }}
          organization_name: ${{ vars.ORGANIZATION_NAME }}
          external_repo: ${{ vars.GITOPS_PATH }}
          metadata_path: "envs/${{ github.event.repository.name }}/ccp-${{ github.event.pull_request.base.ref }}/version_info.json"
          deployment_overlay_path: "envs/${{ github.event.repository.name }}/ccp-${{ github.event.pull_request.base.ref }}"
          gh_repo_name: ${{ github.event.repository.name }}
          release_branch_docker_alias: ${{ github.base_ref }}

